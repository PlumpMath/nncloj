(ns nn.utils.matrix)


(defn transform-matrix [rx, ry, rz]
  (let [cx (Math/cos rx)
        cy (Math/cos ry)
        cz (Math/cos rz)
        sx (Math/sin rx)
        sy (Math/sin ry)
        sz (Math/sin rz)]
    [(* cy cz)  (- (*   sx sy cz) (* cx sz ))  (+ (*  sx sz)
     (*  cx sy cz))  0 (* cy sz) (+ (* sx sy sz)
     (* cx cz))  (- (*  cx sy sz) (*  sx cz))  0
     (- sy)  (* sx cy) (* cx cy) 0
     0 0 0 1]))

(defn identity-matrix []
  [1 0 0 0
   0 1 0 0
   0 0 1 0
   0 0 0 1])

(def square-vertex
  [
   1.0 1.0 1.0
  -1.0 1.0 1.0
  -1.0 -1.0 1.0
   1.0 -1.0 1.0

   1.0 1.0  -1.0
   -1.0 1.0 -1.0
  -1.0 -1.0  -1.0
   1.0 -1.0  -1.0

   -1.0,  1.0,  1.0
   -1.0,  1.0, -1.0
   -1.0, -1.0, -1.0
   -1.0, -1.0,  1.0

   1.0,  1.0,  1.0,
   1.0, -1.0,  1.0,
   1.0, -1.0, -1.0,
   1.0,  1.0, -1.0,

   1.0,  1.0,  1.0,
   1.0,  1.0, -1.0,
  -1.0,  1.0, -1.0,
  -1.0,  1.0,  1.0,

   1.0, -1.0,  1.0
   1.0, -1.0, -1.0
   -1.0, -1.0, -1.0
   -1.0, -1.0,  1.0
])

(def cube-index
  [ 0, 1, 2,      0, 2, 3,
    4, 6, 5,      4, 7, 6,
    8, 9, 10,     8, 10, 11
    12, 13, 14    12, 14, 15
    16, 17, 18    16, 18, 19
    20, 22, 21    20, 23, 22])





